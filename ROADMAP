TODO plan:
Architectural tasks:
    1. SSDEEP responsese check
    2. Reply time check
    3. Mark both 1,2 as suspicious if stats has anomalies
    9. Add feature for starting fuzing process in parrallel:
        9.1 Add possibility to handle several files in several threads
    13. Add parameters from other hints and services (to HintsdB from APIGW)
        merge parameters from other hints and services, other variant /|\
    Additional tasks:
        types refactoring - make named tuple where required

Business logic tasks:
    4. Semantic mutation:  --> HARD
        4.1 action mytator by mutation testig tools(extract code or use tool as is to get mutated code bundle)
        4.2 JSON mutator - big project with semantic mutation, many questions how to realize
    6. RegEx generator (as UUID-regex or something else)
    7. Realize lack of current parameter AND doubled one
    14. Add structed mutations(testing with structly-correct randon data input)

Routine tasks:
    5. Attach file with patterns for fuzzing  --> EASY
    8. Make sure that all items in tape are unique
    10. Add option for adding dir with custom generators/mutators
        First, post_json_fuzzer will try to find and registrate those generators in those folders
    11. Add fuzzer.log file with deep log info: as in  --> EASY
        https://s3.amazonaws.com/clickhouse-test-reports/33698/ea527ff7790372cd3ecb0bac111fd5af44c50103/fuzzer_astfuzzertsan,actions//fuzzer.log
    12. Try to addd lazy generator random_every_time$ with all other params which could be pairwise:
        id": (132, '#FUNC#random_every_time$'), "test": (1, 2, 3) means that for every permutation
        id will make different random numbers: "id": 1928399182, "test": 1, "id": 9898934982034, "test": 2, etc. make it


Tasks for future:
    1. Add utility for making quick request for check if bug is fixed. E.g.: ./check_request -f ./results/disable_attack_type_dd_mm__yyyy/500 -n 12 (request is 12)
       It could be execute in bash loop script with i as -n(after all is fixed)
    2. from string import Template - try to replace str(dict)/smart_replace and others by substitute operation
    3. check if Python is > 3.6 because of potential using of named tuples
    4. *get_pack_by_methods("client_id", [list_once, list_several_times]) - try to add parameters for every function